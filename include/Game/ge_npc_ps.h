#ifndef GE_NPC_PS_H_INCLUDED
#define GE_NPC_PS_H_INCLUDED

class GE_DLLIMPORT gCNPC_PS :
    public eCEntityPropertySet
{
    public:    virtual eCEntityPropertySet::eEPSSaveGameRelevance GetSaveGameRelevance( void );
    public:    virtual GEU16                                      GetVersion( void ) const;
    public: using bCObjectBase::Write;
    public:    virtual bEResult                                   Write( bCOStream & );
    public:    virtual bEResult                                   Read( bCIStream & );
    public:    virtual void                                       Destroy( void );
    public:    virtual bEResult                                   Create( void );
    public:    virtual bEResult                                   CopyFrom( bCObjectBase const & );
    public:    virtual                                           ~gCNPC_PS( void );
    public:    virtual GEBool                                     OnNotifyPropertyValueChangedExitEx( GELPCChar, GEBool );
    public:    virtual eEPropertySetType                          GetPropertySetType( void ) const;
    public:    virtual GEBool                                     IsReferencedByTemplate( void ) const;
    public:    virtual GEBool                                     IsProcessable( void ) const;
    public:    virtual GEBool                                     SupportsRenderDebugOutput( void ) const;
    public:    virtual bEResult                                   ReadSaveGame( bCIStream & );
    public:    virtual bEResult                                   WriteSaveGame( bCOStream & );
    public:    virtual eCEntityPropertySet::eEPSSaveGameRelevance GetSaveGameRelevance( void ) const;
    public:    virtual void                                       OnPostRead( void );
    public:    virtual void                                       GetDependencies( bTValArray<bCString> &, bTValArray<bCString> &, bTObjArray<eCTemplateEntityProxy> & );
    protected: virtual void                                       OnTouch( eCEntity *, eCContactIterator & );
    public:    virtual void                                       OnEnterProcessingRange( void );
    public:    virtual void                                       OnExitProcessingRange( void );
    public:    virtual void                                       GetOnScreenDebugLines( GEU32, bTObjArray<eSPropertySetDebugLine> & ) const;
    public:    virtual void                                       OnProcess( void );
    public:    virtual void                                       OnPreProcess( void );
    public:    virtual void                                       OnSaveGameEntityPostRead( void );
    public:    virtual void                                       OnPostCopy( eCEntityPropertySet const & );
    public:    virtual void                                       OnPropertySetRemoved( void );
    public:    virtual void                                       OnCustomPatch( eCEntityPropertySet const * );

    public:
        static bCPropertyObjectBase const * GE_STDCALL GetRootObject( void );

    public:
        gCNPC_PS( gCNPC_PS const & );
        gCNPC_PS( void );

    public:
        gCNPC_PS const & operator = ( gCNPC_PS const & );

    public:
        eCEntityProxy &                                       AccessAlternativeTargetEntity( void );
        bTPropertyContainer<gEAttackReason> &                 AccessAttackReason( void );
        bTPropertyContainer<gEAttitude> &                     AccessAttitudeToPlayer2( void );
        bTPropertyContainer<gEBearing> &                      AccessBearing( void );
        bTPropertyContainer<gEClass> &                        AccessClass( void );
        GEU32 &                                               AccessCombatState( void );
        eCEntityProxy &                                       AccessCurrentAttackerEntity( void );
        eCEntityProxy &                                       AccessCurrentTargetEntity( void );
        GEBool &                                              AccessDefeatedByPlayer( void );
        bCString &                                            AccessDescription( void );
        GEBool &                                              AccessDiscovered( void );
        GEFloat &                                             AccessDistToNearestMist( void );
        bCPropertyID &                                        AccessEnclave( void );
        bTPropertyContainer<gEGender> &                       AccessGender( void );
        eCEntityProxy &                                       AccessGuardPoint( void );
        bTPropertyContainer<gEGuardStatus> &                  AccessGuardStatus( void );
        GEBool &                                              AccessImmortal( void );
        eCEntityProxy &                                       AccessLastAttackerEntity( void );
        GEU32 &                                               AccessLastCastTimestamp( void );
        GEFloat &                                             AccessLastDistToGuardPoint( void );
        GEFloat &                                             AccessLastDistToTarget( void );
        bTPropertyContainer<gELastFightAgainstPlayer> &       AccessLastFightAgainstPlayer( void );
        GEBool &                                              AccessLastFightComment( void );
        GEFloat &                                             AccessLastFightTimestamp( void );
        GEU32 &                                               AccessLastHitTimestamp( void );
        bTPropertyContainer<gEAttackReason> &                 AccessLastPlayerAR( void );
        bTPropertyContainer<gEPlayerCrime> &                  AccessLastPlayerCrime( void );
        bCString &                                            AccessLastSpell( void );
        GEU32 &                                               AccessLevel( void );
        GEU32 &                                               AccessLevelMax( void );
        GEInt &                                               AccessManaUsed( void );
        bTPropertyContainer<gEPoliticalAlignment> &           AccessPoliticalAlignment( void );
        GEBool &                                              AccessRansacked( void );
        bCString &                                            AccessRoleDescription( void );
        bTPropertyContainer<gESpecies> &                      AccessSpecies( void );
        eCEntityProxy &                                       AccessSpellTarget( void );
        GEU32 &                                               AccessStatusEffects( void );
        bTObjArray<bCString> &                                AccessTeachAttribs( void );
        bTObjArray<eCTemplateEntityProxy> &                   AccessTeachSkills( void );
        GEU32 &                                               AccessTimeStampBurning( void );
        GEU32 &                                               AccessTimeStampDiseased( void );
        GEU32 &                                               AccessTimeStampFrozen( void );
        GEU32 &                                               AccessTimeStampPoisoned( void );
        GEU32 &                                               AccessTimeStampTransformed( void );
        bTPropertyContainer<gENPCType> &                      AccessType( void );
        bCString &                                            AccessVoice( void );
        void                                                  EnableStatusEffect( gEStatusEffect, GEBool );
        GEBool                                                ForceNextPose( gEPose );
        eCEntityProxy const &                                 GetAlternativeTargetEntity( void ) const;
        eCEntityProxy &                                       GetAreaProxy( void );
        bTPropertyContainer<gEAttackReason> const &           GetAttackReason( void ) const;
        bTPropertyContainer<gEAttitude> const &               GetAttitudeToPlayer2( void ) const;
        bTPropertyContainer<gEBearing> const &                GetBearing( void ) const;
        bTPropertyContainer<gEClass> const &                  GetClass( void ) const;
        GEU32 const &                                         GetCombatState( void ) const;
        eCEntityProxy const &                                 GetCurrentAttackerEntity( void ) const;
        bCString const &                                      GetCurrentMovementAni( void ) const;
        eCEntityProxy const &                                 GetCurrentTargetEntity( void ) const;
        GEBool const &                                        GetDefeatedByPlayer( void ) const;
        bCString const &                                      GetDescription( void ) const;
        GEBool const &                                        GetDiscovered( void ) const;
        GEFloat const &                                       GetDistToNearestMist( void ) const;
        bCPropertyID const &                                  GetEnclave( void ) const;
        eCEntityProxy &                                       GetEnclaveProxy( void );
        bTPropertyContainer<gEGender> const &                 GetGender( void ) const;
        eCEntityProxy const &                                 GetGuardPoint( void ) const;
        bTPropertyContainer<gEGuardStatus> const &            GetGuardStatus( void ) const;
        GEBool const &                                        GetImmortal( void ) const;
        eCEntityProxy const &                                 GetLastAttackerEntity( void ) const;
        GEU32 const &                                         GetLastCastTimestamp( void ) const;
        GEFloat const &                                       GetLastDistToGuardPoint( void ) const;
        GEFloat const &                                       GetLastDistToTarget( void ) const;
        bTPropertyContainer<gELastFightAgainstPlayer> const & GetLastFightAgainstPlayer( void ) const;
        GEBool const &                                        GetLastFightComment( void ) const;
        GEFloat const &                                       GetLastFightTimestamp( void ) const;
        GEU32 const &                                         GetLastHitTimestamp( void ) const;
        bTPropertyContainer<gEAttackReason> const &           GetLastPlayerAR( void ) const;
        bTPropertyContainer<gEPlayerCrime> const &            GetLastPlayerCrime( void ) const;
        bCString const &                                      GetLastSpell( void ) const;
        GEU32 const &                                         GetLevel( void ) const;
        GEU32 const &                                         GetLevelMax( void ) const;
        GEInt const &                                         GetManaUsed( void ) const;
        bTPropertyContainer<gEPoliticalAlignment> const &     GetPoliticalAlignment( void ) const;
        GEFloat                                               GetPoseWeighting( void ) const;
        gEPose                                                GetPrimaryPose( void ) const;
        gEPose                                                GetPrimaryPoseExt( gEAction, bCString );
        gEPose                                                GetPrimaryPoseExt( gEAction, gEPhase );
        GEBool const &                                        GetRansacked( void ) const;
        bCString const &                                      GetRoleDescription( void ) const;
        gEPose                                                GetSecondaryPose( void ) const;
        eCEntityProxy &                                       GetSpawnPointProxy( void );
        bTPropertyContainer<gESpecies> const &                GetSpecies( void ) const;
        eCEntityProxy const &                                 GetSpellTarget( void ) const;
        GEU32 const &                                         GetStatusEffects( void ) const;
        bTObjArray<bCString> const &                          GetTeachAttribs( void ) const;
        bTObjArray<eCTemplateEntityProxy> const &             GetTeachSkills( void ) const;
        GEU32 const &                                         GetTimeStampBurning( void ) const;
        GEU32 const &                                         GetTimeStampDiseased( void ) const;
        GEU32 const &                                         GetTimeStampFrozen( void ) const;
        GEU32 const &                                         GetTimeStampPoisoned( void ) const;
        GEU32 const &                                         GetTimeStampTransformed( void ) const;
        bTPropertyContainer<gENPCType> const &                GetType( void ) const;
        bCString const &                                      GetVoice( void ) const;
        GEBool                                                HasStatusEffect( gEStatusEffect ) const;
        void                                                  SetAlternativeTargetEntity( eCEntityProxy const & );
        void                                                  SetAttackReason( bTPropertyContainer<gEAttackReason> const & );
        void                                                  SetAttitudeToPlayer2( bTPropertyContainer<gEAttitude> const & );
        void                                                  SetBearing( bTPropertyContainer<gEBearing> const & );
        void                                                  SetClass( bTPropertyContainer<gEClass> const & );
        void                                                  SetCombatState( GEU32 const & );
        void                                                  SetCurrentAttackerEntity( eCEntityProxy const & );
        void                                                  SetCurrentMovementAni( bCString const & );
        void                                                  SetCurrentTargetEntity( eCEntityProxy const & );
        void                                                  SetDefeatedByPlayer( GEBool const & );
        void                                                  SetDescription( bCString const & );
        void                                                  SetDiscovered( GEBool const & );
        void                                                  SetDistToNearestMist( GEFloat const & );
        void                                                  SetEnclave( bCPropertyID const & );
        void                                                  SetGender( bTPropertyContainer<gEGender> const & );
        void                                                  SetGuardPoint( eCEntityProxy const & );
        void                                                  SetGuardStatus( bTPropertyContainer<gEGuardStatus> const & );
        void                                                  SetImmortal( GEBool const & );
        void                                                  SetLastAttackerEntity( eCEntityProxy const & );
        void                                                  SetLastCastTimestamp( GEU32 const & );
        void                                                  SetLastDistToGuardPoint( GEFloat const & );
        void                                                  SetLastDistToTarget( GEFloat const & );
        void                                                  SetLastFightAgainstPlayer( bTPropertyContainer<gELastFightAgainstPlayer> const & );
        void                                                  SetLastFightComment( GEBool const & );
        void                                                  SetLastFightTimestamp( GEFloat const & );
        void                                                  SetLastHitTimestamp( GEU32 const & );
        void                                                  SetLastPlayerAR( bTPropertyContainer<gEAttackReason> const & );
        void                                                  SetLastPlayerCrime( bTPropertyContainer<gEPlayerCrime> const & );
        void                                                  SetLastSpell( bCString const & );
        void                                                  SetLevel( GEU32 const & );
        void                                                  SetLevelMax( GEU32 const & );
        void                                                  SetManaUsed( GEInt const & );
        void                                                  SetPoliticalAlignment( bTPropertyContainer<gEPoliticalAlignment> const & );
        void                                                  SetPoseWeighting( GEFloat );
        void                                                  SetPrimaryPose( gEPose );
        void                                                  SetRansacked( GEBool const & );
        void                                                  SetRoleDescription( bCString const & );
        void                                                  SetSecondaryPose( gEPose );
        void                                                  SetSpecies( bTPropertyContainer<gESpecies> const & );
        void                                                  SetSpellTarget( eCEntityProxy const & );
        void                                                  SetStatusEffects( GEU32 const & );
        void                                                  SetTeachAttribs( bTObjArray<bCString> const & );
        void                                                  SetTeachSkills( bTObjArray<eCTemplateEntityProxy> const & );
        void                                                  SetTimeStampBurning( GEU32 const & );
        void                                                  SetTimeStampDiseased( GEU32 const & );
        void                                                  SetTimeStampFrozen( GEU32 const & );
        void                                                  SetTimeStampPoisoned( GEU32 const & );
        void                                                  SetTimeStampTransformed( GEU32 const & );
        void                                                  SetType( bTPropertyContainer<gENPCType> const & );
        void                                                  SetVoice( bCString const & );

    protected:
        void GameReset( void );
        void Invalidate( void );
        void TrackCurrentPose( void );

};

#endif
